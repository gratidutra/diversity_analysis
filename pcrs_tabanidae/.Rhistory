as_tibble() %>%
cbind(data_nmds) %>%
as_tibble()%>%
ggplot(aes(x = NMDS1, y = NMDS2)) +
geom_point(aes(size = rich)) +
stat_ellipse(geom = "polygon", aes(group = rich, color = rich), alpha = 0.3) +
annotate("text", x = -2, y = 0.95, label = paste0("stress: ", format(nmds$stress, digits = 4)), hjust = 0) +
theme_bw()
scores(nmds)  %>%
as_tibble() %>%
cbind(data_nmds) %>%
as_tibble()%>%
ggplot(aes(x = NMDS1, y = NMDS2)) +
geom_point(aes(size = rich)) +
stat_ellipse(geom = "polygon", aes(group = rich), alpha = 0.3) +
annotate("text", x = -2, y = 0.95, label = paste0("stress: ", format(nmds$stress, digits = 4)), hjust = 0) +
theme_bw()
adonis(dist_bray~data_nmds$Localidade, permutations = 1000)
# Rich x Abund
rich_abund <- data_nmds %>%
pivot_longer(!c(Localidade, Mês, rich), names_to = "Espécie", values_to = "abund") %>%
filter(Espécie %in% top_specie$Espécie)
ggplot(rich_abund, aes(x = rich, y = abund)) +
geom_point() +
geom_smooth(method = "lm", alpha = .15) +
facet_wrap(~Espécie)
# Rich x Abund
rich_abund <- data_nmds %>%
pivot_longer(!c(Localidade, rich), names_to = "Espécie", values_to = "abund") %>%
filter(Espécie %in% top_specie$Espécie)
ggplot(rich_abund, aes(x = rich, y = abund)) +
geom_point() +
geom_smooth(method = "lm", alpha = .15) +
facet_wrap(~Espécie)
df %>%
group_by(Espécie, Localidade) %>%
summarise(total = n()) %>%
pivot_wider(names_from = Localidade, values_from = total)
abund <- df %>%
group_by(Espécie, Localidade) %>%
summarise(total = n()) %>%
pivot_wider(names_from = Localidade, values_from = total)
View(abund)
abund <- df %>%
pivot_wider(names_from = Localidade, values_from = Abundância)  %>%
column_to_rownames(var = "Espécie")
abund
df
df
resultados_tabanidae <- iNEXT(abund,
q = c(0, 1, 2),
datatype = "abundance",
endpoint = 400
)
## Resultado
resultados_tabanidae$AsyEst
ggiNEXT(resultados_tabanidae, type = 1, facet.var = 'order') + theme_light()
?ggiNEXT
ggiNEXT(resultados_tabanidae, type = 3, facet.var = 'order') + theme_light()
ggiNEXT(resultados_tabanidae, type = 2, facet.var = 'order') + theme_light()
ggiNEXT(resultados_tabanidae, type = 1, facet.var = 'both') + theme_light()
ggiNEXT(resultados_tabanidae, type = 1, facet.var = 'site') + theme_light()
ggiNEXT(resultados_tabanidae, type = 1, facet.var = 'site', nrow = 2 ) + theme_light()
ggiNEXT(resultados_tabanidae, type = 1, facet.var = 'site') + theme_light() + facet_wrap(nrow = 2)
?facet.var
??facet.var
ggiNEXT(resultados_tabanidae, type = 1) + theme_light() + facet_wrap(~site, nrow = 2)
ggiNEXT(resultados_tabanidae, type = 1, facet.var = 'site') + theme_light()
ggiNEXT(resultados_tabanidae, type = 1) + theme_light()
ggiNEXT(resultados_tabanidae, type = 1, facet.var = 'site') + theme_light() + facet_wrap(~site, ncol=3)
ggiNEXT(resultados_tabanidae, type = 1, facet.var = 'site') + theme_light() + facet_wrap(~site, ncol=3,
scales = 'free')
## Resultado
resultados_tabanidae$AsyEst
resultados_tabanidae
count <- df %>%
group_by(`Espécie`, Localidade) %>%
summarise(total = n())
Pelotas <- count %>%
filter(Localidade == 'Pelotas') %>%
select(Localidade, `Espécie`)
Corrientes <- count %>%
filter(Localidade == 'Corrientes') %>%
select(Localidade, `Espécie`)
Turucu <- count %>%
filter(Localidade == 'Turuçu') %>%
select(Localidade, `Espécie`)
RPPN <- count %>%
filter(Localidade == 'RPPN') %>%
select(Localidade, `Espécie`)
Lami <- count %>%
filter(Localidade == 'Lami') %>%
select(Localidade, `Espécie`)
Pacheca <- count %>%
filter(Localidade == 'Pacheca') %>%
select(Localidade, `Espécie`)
Taim <- count %>%
filter(Localidade == 'Taim') %>%
select(Localidade, `Espécie`)
itapua <- count %>%
filter(Localidade == 'Itapuã') %>%
select(Localidade, `Espécie`)
Itapeva <- count %>%
filter(Localidade == 'Itapeva') %>%
select(Localidade, `Espécie`)
lagoa <- count %>%
filter(Localidade == 'Lagoa do Peixe') %>%
select(Localidade, `Espécie`)
group.venn(list(Pelotas = Pelotas$Espécie, Corrientes = Corrientes$Espécie, Turucu = Turucu$Espécie,
RPPN = RPPN$Espécie, Lami = Lami$Espécie, Pacheca = Pacheca$Espécie, Taim = Taim$Espécie,
itapua = itapua$Espécie, Itapeva = Itapeva$Espécie, lagoa = lagoa$Espécie),
label = FALSE,
fill = c("lightpink", "lightblue", "green", "red", "yelow", "blue", "pink", "lightgray", "black", "darkgray"),
cat.pos = c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
cex = 2)
group.venn(list(Pelotas = Pelotas$`Espécie`, Corrientes = Corrientes$`Espécie`, Turucu = Turucu$`Espécie`,
RPPN = RPPN$`Espécie`, Lami = Lami$`Espécie`, Pacheca = Pacheca$`Espécie`, Taim = Taim$`Espécie`,
itapua = itapua$`Espécie`, Itapeva = Itapeva$`Espécie`, lagoa = lagoa$`Espécie`),
label = FALSE,
fill = c("lightpink", "lightblue", "green", "red", "yelow", "blue", "pink", "lightgray", "black", "darkgray"),
cat.pos = c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
cex = 2)
# chamando as libs necessárias
pacman::p_load(tidyverse, magrittr, lubridate, iNEXT, vegan, RAM, permute,dplyr, nVennR)
count
df %>%
filter(Localidade == 'Pelotas') %>%
select(Localidade, `Espécie`)
Pelotas <- df %>%
filter(Localidade == 'Pelotas') %>%
select(Localidade, `Espécie`)
Corrientes <- df %>%
filter(Localidade == 'Corrientes') %>%
select(Localidade, `Espécie`)
Turucu <- df %>%
filter(Localidade == 'Turuçu') %>%
select(Localidade, `Espécie`)
RPPN <- df %>%
filter(Localidade == 'RPPN') %>%
select(Localidade, `Espécie`)
Lami <- df %>%
filter(Localidade == 'Lami') %>%
select(Localidade, `Espécie`)
Pacheca <- df %>%
filter(Localidade == 'Pacheca') %>%
select(Localidade, `Espécie`)
Taim <- df %>%
filter(Localidade == 'Taim') %>%
select(Localidade, `Espécie`)
itapua <- df %>%
filter(Localidade == 'Itapuã') %>%
select(Localidade, `Espécie`)
Itapeva <- df %>%
filter(Localidade == 'Itapeva') %>%
select(Localidade, `Espécie`)
lagoa <- df %>%
filter(Localidade == 'Lagoa do Peixe') %>%
select(Localidade, `Espécie`)
group.venn(list(Pelotas = Pelotas$`Espécie`, Corrientes = Corrientes$`Espécie`, Turucu = Turucu$`Espécie`,
RPPN = RPPN$`Espécie`, Lami = Lami$`Espécie`, Pacheca = Pacheca$`Espécie`, Taim = Taim$`Espécie`,
itapua = itapua$`Espécie`, Itapeva = Itapeva$`Espécie`, lagoa = lagoa$`Espécie`),
label = FALSE,
fill = c("lightpink", "lightblue", "green", "red", "yelow", "blue", "pink", "lightgray", "black", "darkgray"),
cat.pos = c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1),
cex = 2)
Pelotas
Pelotas$`Espécie`
M <-tibble(value=c(1,3,2,7,5),'TEA'=c(TRUE,FALSE,TRUE,FALSE,FALSE),
'COFFEE'=c(TRUE,TRUE,FALSE,FALSE,TRUE),
'JUICE'=c(TRUE,FALSE,FALSE,TRUE,TRUE))
M
df
abund
M
D <-list('Autumn'=c(2,3,1),'Winter'=c(4,7,9,1),
'Summer'=c(3,7,2,5),'Spring'=c(2,5,9,1))
D
M <-list('Rose'=c(2,6),'Lily'=c(5,3,9,2),
'Sunflower'=c(3,10,2),'Lotus'=c(5,7,8))
M
df %>%
filter(Localidade == 'Pelotas') %>%
select(Localidade, `Espécie`)
df %>%
filter(Localidade == 'Corrientes') %>%
select(Localidade, `Espécie`)
Pelotas <- df %>%
filter(Localidade == 'Pelotas') %>% filter(Abundância > 0)
Pelotas <- df %>%
filter(Localidade == 'Pelotas') %>% filter(Abundância > 0) %>%
select(Espécie`)
Pelotas <- df %>%
filter(Localidade == 'Pelotas') %>% filter(Abundância > 0) %>%
select(`Espécie`)
df %>%
filter(Localidade == 'Pelotas') %>%
filter(Abundância > 0) %>%
select(`Espécie`)
Pelotas
Pelotas <- df %>%
filter(Localidade == 'Pelotas') %>%
filter(Abundância > 0) %>%
select(`Espécie`)
Pelotas
Corrientes <- df %>%
filter(Localidade == 'Corrientes') %>%
filter(Abundância > 0)  %>%
select(`Espécie`)
group.venn(list(Pelotas = Pelotas, Corrientes = Corrientes),
label = FALSE,
fill = c("lightpink", "lightblue"),
cat.pos = c(1, 1),
cex = 2)
group.venn(list(Pelotas = Pelotas$Espécie, Corrientes = Corrientes$Espécie),
label = FALSE,
fill = c("lightpink", "lightblue"),
cat.pos = c(1, 1),
cex = 2)
group.venn(list(Pelotas$Espécie, Corrientes$Espécie),
label = FALSE,
fill = c("lightpink", "lightblue"),
cat.pos = c(1, 1),
cex = 2)
group.venn(list(Pelotas$Espécie, Corrientes$Espécie),
label = FALSE,
fill = c("lightpink", "lightblue"),
cat.pos = c(1, 1),
cex = 2)
group.venn(list(Pelotas = Pelotas$Espécie, Corrientes = Corrientes$Espécie),
label = FALSE,
fill = c("lightpink", "lightblue"),
cat.pos = c(1, 1),
cex = 2)
group.venn(list(Pelotas = Pelotas$Espécie, Corrientes = Corrientes$Espécie, Turucu = Turucu$Espécie ),
label = FALSE,
fill = c("lightpink", "lightblue", 'blue'),
cat.pos = c(1, 1),
cex = 2)
group.venn(list(Pelotas = Pelotas$Espécie, Corrientes = Corrientes$Espécie, Turucu = Turucu$Espécie ),
label = FALSE,
fill = c("lightpink", "lightblue", 'blue'),
cat.pos = c(1, 1,1),
cex = 2)
Pelotas <- df %>%
filter(Localidade == 'Pelotas') %>%
filter(Abundância > 0) %>%
select(`Espécie`)
Corrientes <- df %>%
filter(Localidade == 'Corrientes') %>%
filter(Abundância > 0)  %>%
select(`Espécie`)
Turucu <- df %>%
filter(Localidade == 'Turuçu') %>%
filter(Abundância > 0) %>%
select(`Espécie`)
RPPN <- df %>%
filter(Localidade == 'RPPN') %>%
filter(Abundância > 0) %>%
select(`Espécie`)
Lami <- df %>%
filter(Localidade == 'Lami') %>%
filter(Abundância > 0) %>%
select(`Espécie`)
Pacheca <- df %>%
filter(Localidade == 'Pacheca') %>%
filter(Abundância > 0) %>%
select(`Espécie`)
Taim <- df %>%
filter(Localidade == 'Taim') %>%
filter(Abundância > 0) %>%
select(`Espécie`)
itapua <- df %>%
filter(Localidade == 'Itapuã') %>%
filter(Abundância > 0) %>%
select(`Espécie`)
Itapeva <- df %>%
filter(Localidade == 'Itapeva') %>%
filter(Abundância > 0) %>%
select(`Espécie`)
lagoa <- df %>%
filter(Localidade == 'Lagoa do Peixe') %>%
filter(Abundância > 0)
select(`Espécie`)
group.venn(list(Pelotas = Pelotas$Espécie, Corrientes = Corrientes$Espécie,
Turucu = Turucu$Espécie, RPPN = RPPN$Espécie
),
label = FALSE,
fill = c("lightpink", "lightblue", 'blue'),
cat.pos = c(1, 1,1,1),
cex = 2)
group.venn(list(Pelotas = Pelotas$Espécie, Corrientes = Corrientes$Espécie,
Turucu = Turucu$Espécie, RPPN = RPPN$Espécie,
Lami = Lami$Espécie
),
label = FALSE,
fill = c("lightpink", "lightblue", 'blue'),
cat.pos = c(1, 1,1,1),
cex = 2)
group.venn(list(Pelotas = Pelotas$Espécie, Corrientes = Corrientes$Espécie,
Turucu = Turucu$Espécie, RPPN = RPPN$Espécie,
Lami = Lami$Espécie
),
label = FALSE,
fill = c("lightpink", "lightblue", 'blue'),
cat.pos = c(1, 1,1,1),
cex = 2)
group.venn(list(Pelotas = Pelotas$Espécie, Corrientes = Corrientes$Espécie,
Turucu = Turucu$Espécie, RPPN = RPPN$Espécie,
Lami = Lami$Espécie
),
label = FALSE,
fill = c("lightpink", "lightblue", 'blue'),
cat.pos = c(1, 1,1,1, 1),
cex = 2)
group.venn(list(Pelotas = Pelotas$Espécie, Corrientes = Corrientes$Espécie,
Turucu = Turucu$Espécie, RPPN = RPPN$Espécie,
Lami = Lami$Espécie
),
label = FALSE,
fill = c("lightpink", "lightblue", 'blue', 'pink'),
cat.pos = c(1, 1,1,1, 1),
cex = 2)
group.venn(list(Pelotas = Pelotas$Espécie, Corrientes = Corrientes$Espécie,
Turucu = Turucu$Espécie, RPPN = RPPN$Espécie,
Lami = Lami$Espécie
),
label = FALSE,
fill = c("lightpink", "lightblue", 'blue', 'pink', 'green'),
cat.pos = c(1, 1,1,1, 1),
cex = 2)
group.venn(list(Pelotas = Pelotas$Espécie, Corrientes = Corrientes$Espécie,
Turucu = Turucu$Espécie, RPPN = RPPN$Espécie,
Lami = Lami$Espécie, lagoa = lagoa$Espécie
),
label = FALSE,
fill = c("lightpink", "lightblue", 'blue', 'pink', 'green', 'gray'),
cat.pos = c(1, 1,1,1, 1),
cex = 2)
group.venn(list(Pelotas = Pelotas$Espécie, Corrientes = Corrientes$Espécie,
Turucu = Turucu$Espécie, RPPN = RPPN$Espécie,
Lami = Lami$Espécie, lagoa = lagoa$Espécie
),
label = FALSE,
fill = c("lightpink", "lightblue", 'blue', 'pink', 'green', 'gray'),
cat.pos = c(1, 1,1,1, 1,2),
cex = 2)
library(tidyverse)
library(viridis)
library(patchwork)
library(hrbrthemes)
library(circlize)
pacman::p_load(tidyverse, viridis,patchwork, hrbrthemes, circlize)
# Load dataset from github
data <- read.table("https://raw.githubusercontent.com/holtzy/data_to_viz/master/Example_dataset/13_AdjacencyDirectedWeighted.csv", header=TRUE)
data
# Package
library(networkD3)
pacman::p_load(tidyverse, viridis,patchwork, hrbrthemes, circlize, networkD3)
# I need a long format
data_long <- data %>%
rownames_to_column %>%
gather(key = 'key', value = 'value', -rowname) %>%
filter(value > 0)
colnames(data_long) <- c("source", "target", "value")
data_long$target <- paste(data_long$target, " ", sep="")
data_long
df <- read_csv("../data/data_pcrs.csv")
df <- df %>%
pivot_longer(!`Espécie`, names_to = "Localidade", values_to = "Abundância")
df
# From these flows we need to create a node data frame: it lists every entities involved in the flow
nodes <- data.frame(name=c(as.character(data_long$source), as.character(data_long$target)) %>% unique())
nodes
# With networkD3, connection must be provided using id, not using real name like in the links dataframe.. So we need to reformat it.
data_long$IDsource=match(data_long$source, nodes$name)-1
data_long$IDtarget=match(data_long$target, nodes$name)-1
data_long
# prepare colour scale
ColourScal ='d3.scaleOrdinal() .range(["#FDE725FF","#B4DE2CFF","#6DCD59FF","#35B779FF","#1F9E89FF","#26828EFF","#31688EFF","#3E4A89FF","#482878FF","#440154FF"])'
# Make the Network
sankeyNetwork(Links = data_long, Nodes = nodes,
Source = "IDsource", Target = "IDtarget",
Value = "value", NodeID = "name",
sinksRight=FALSE, colourScale=ColourScal, nodeWidth=40, fontSize=13, nodePadding=20)
# From these flows we need to create a node data frame: it lists every entities involved in the flow
nodes <- data.frame(name=c(as.character(df$Espécie), as.character(df$Localidade)) %>% unique())
data_long
# With networkD3, connection must be provided using id, not using real name like in the links dataframe.. So we need to reformat it.
df$IDsource=match(df$Espécie, nodes$name)-1
df$IDtarget=match(df$Localidade, nodes$name)-1
# prepare colour scale
ColourScal ='d3.scaleOrdinal() .range(["#FDE725FF","#B4DE2CFF","#6DCD59FF","#35B779FF",
"#1F9E89FF","#26828EFF","#31688EFF","#3E4A89FF","#482878FF","#440154FF"])'
df
# Make the Network
sankeyNetwork(Links = df, Nodes = nodes,
Source = "IDsource", Target = "IDtarget",
Value = "value", NodeID = "name",
sinksRight=FALSE, colourScale=ColourScal, nodeWidth=40, fontSize=13, nodePadding=20)
data_long
df
# Make the Network
sankeyNetwork(Links = df, Nodes = nodes,
Source = "IDsource", Target = "IDtarget",
Value = "Abundância", NodeID = "name",
sinksRight=FALSE, colourScale=ColourScal, nodeWidth=40, fontSize=13, nodePadding=20)
cores(nmds)  %>%
as_tibble() %>%
cbind(data_nmds) %>%
as_tibble()
styler:::style_selection()
styler:::style_selection()
ggiNEXT(resultados_tabanidae, type = 1, facet.var = 'site') + theme_light() +
facet_wrap(~site, ncol=3, scales = 'free')
# chamando as libs necessárias
pacman::p_load(tidyverse, magrittr, lubridate, iNEXT, vegan, permute, dplyr, networkD3)
df <- read_csv("../data/data_pcrs.csv")
df <- df %>%
pivot_longer(!`Espécie`, names_to = "Localidade", values_to = "Abundância")
distinct(df, Localidade)
# top 5 specie
top_specie <- df %>% arrange(-Abundância) %>% slice(1:5)
# Sankey
nodes <- data.frame(name = c(as.character(df$Espécie), as.character(df$Localidade)) %>% unique())
df$IDsource <- match(df$Espécie, nodes$name) - 1
df$IDtarget <- match(df$Localidade, nodes$name) - 1
ColourScal <- 'd3.scaleOrdinal() .range(["#FDE725FF","#B4DE2CFF","#6DCD59FF","#35B779FF",
"#1F9E89FF","#26828EFF","#31688EFF","#3E4A89FF","#482878FF","#440154FF"])'
sankeyNetwork(
Links = df, Nodes = nodes,
Source = "IDsource", Target = "IDtarget",
Value = "Abundância", NodeID = "name",
sinksRight = FALSE, colourScale = ColourScal, nodeWidth = 40, fontSize = 13, nodePadding = 20
)
# NMDS
rich <- df %>%
group_by(Localidade) %>%
filter(Abundância > 0) %>%
summarise(rich = n_distinct(Espécie))
data_nmds <- df %>%
group_by(Espécie, Localidade) %>%
pivot_wider(names_from = Espécie, values_from = Abundância) %>%
mutate(
across(everything(), ~ replace_na(.x, 0))
) %>%
left_join(rich, by = "Localidade")
run_nmds <- data_nmds
run_nmds$Localidade <- NULL
run_nmds$rich <- NULL
dist_bray <- vegdist(run_nmds, method = "bray", binary = TRUE)
dist_bray
nmds <- metaMDS(dist_bray)
scores(nmds) %>%
as_tibble() %>%
cbind(data_nmds) %>%
as_tibble() %>%
ggplot(aes(x = NMDS1, y = NMDS2)) +
geom_point(aes(size = rich)) +
stat_ellipse(geom = "polygon", aes(group = rich), alpha = 0.3) +
annotate("text", x = -2, y = 0.95, label = paste0("stress: ", format(nmds$stress, digits = 4)), hjust = 0) +
theme_bw()
# Permanova
adonis(dist_bray~data_nmds$Localidade, permutations = 1000)
# Rich x Abund
rich_abund <- data_nmds %>%
pivot_longer(!c(Localidade, rich), names_to = "Espécie", values_to = "abund") %>%
filter(Espécie %in% top_specie$Espécie)
ggplot(rich_abund, aes(x = rich, y = abund)) +
geom_point() +
geom_smooth(method = "lm", alpha = .15) +
facet_wrap(~Espécie)
# Diversidade
abund <- df %>%
pivot_wider(names_from = Localidade, values_from = Abundância)  %>%
column_to_rownames(var = "Espécie")
resultados_tabanidae <- iNEXT(abund,
q = c(0, 1, 2),
datatype = "abundance",
endpoint = 400
)
# Resultado 0 = Species richness; 1 = Shannon diversity; 2 = Simpson diversity
resultados_tabanidae$AsyEst
ggiNEXT(resultados_tabanidae, type = 1, facet.var = 'site') + theme_light() +
facet_wrap(~site, ncol=3, scales = 'free')
abund <- df %>%
pivot_wider(names_from = Localidade, values_from = Abundância)  %>%
column_to_rownames(var = "Espécie")
df %>%
pivot_wider(names_from = Localidade, values_from = Abundância
)
abund <- read_csv("../data/data_pcrs.csv") %>%
pivot_wider(names_from = Localidade, values_from = Abundância)  %>%
column_to_rownames(var = "Espécie")
resultados_tabanidae <- iNEXT(abund,
q = c(0, 1, 2),
datatype = "abundance",
endpoint = 400
)
abund <- read_csv("../data/data_pcrs.csv") %>%
pivot_wider(names_from = Localidade, values_from = Abundância)  %>%
column_to_rownames(var = "Espécie")
abund <- read_csv("../data/data_pcrs.csv") %>%
column_to_rownames(var = "Espécie")
resultados_tabanidae <- iNEXT(abund,
q = c(0, 1, 2),
datatype = "abundance",
endpoint = 400
)
resultados_tabanidae$AsyEst
resultados_tabanidae$AsyEst
ggiNEXT(resultados_tabanidae, type = 1, facet.var = 'site') + theme_light() +
facet_wrap(~site, ncol=3, scales = 'free')
